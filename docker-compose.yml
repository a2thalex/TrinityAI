services:
  # Neo4j - Social Graph Database
  neo4j:
    image: neo4j:5.15-enterprise
    container_name: social-graph-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password123
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_dbms_memory_heap_initial__size=2G
      - NEO4J_dbms_memory_heap_max__size=4G
      - NEO4J_dbms_memory_pagecache_size=2G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - ./infrastructure/neo4j/conf:/conf
      - ./infrastructure/neo4j/plugins:/plugins
    networks:
      - ai-awareness-network

  # Apache Jena Fuseki - Knowledge Graph
  fuseki:
    image: stain/jena-fuseki:latest
    container_name: knowledge-graph-jena
    ports:
      - "3030:3030"
    environment:
      - ADMIN_PASSWORD=admin123
      - JVM_ARGS=-Xmx4g
    volumes:
      - fuseki_data:/fuseki
      - ./infrastructure/jena/config:/fuseki/config
      - ./infrastructure/jena/data:/fuseki/databases
    networks:
      - ai-awareness-network

  # Weaviate - Vector Database
  weaviate:
    image: semitechnologies/weaviate:1.23.0
    container_name: ai-graph-vector-db
    ports:
      - "8080:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'text2vec-openai'
      ENABLE_MODULES: 'text2vec-openai,generative-openai,qna-openai'
      CLUSTER_HOSTNAME: 'weaviate'
    volumes:
      - weaviate_data:/var/lib/weaviate
    networks:
      - ai-awareness-network

  # Redis - Caching Layer
  redis:
    image: redis:7.2-alpine
    container_name: redis-cache
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - ai-awareness-network

  # PostgreSQL - Metadata and Configuration Store
  postgres:
    image: postgres:16-alpine
    container_name: metadata-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ai_awareness
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - ai-awareness-network

  # Kafka - Event Streaming
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ai-awareness-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - ai-awareness-network

  # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - ai-awareness-network

  # Grafana - Monitoring Dashboard
  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./infrastructure/monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - ai-awareness-network

  # Jaeger - Distributed Tracing
  jaeger:
    image: jaegertracing/all-in-one:1.52
    container_name: jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"  # UI
      - "14268:14268"
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: 9411
    networks:
      - ai-awareness-network

  # MinIO - S3-compatible Object Storage
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - ai-awareness-network

volumes:
  neo4j_data:
  neo4j_logs:
  fuseki_data:
  weaviate_data:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:
  minio_data:

networks:
  ai-awareness-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16